{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters":{
        "KeyPairParameter":{
              "Type":"String"
      }
    },
  "Resources": {
    "vpc82d4e6ea": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subnet3a639b77": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "eu-central-1c",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "subnet1e76b075": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "eu-central-1a",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "subnet327a7c48": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.32.0/20",
        "AvailabilityZone": "eu-central-1b",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "albsubnet1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.48.0/20",
        "AvailabilityZone": "eu-central-1a",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "albsubnet1b": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.64.0/20",
        "AvailabilityZone": "eu-central-1b",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "igw298a5c41": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    
    "NAT" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "subnet3a639b77"},
        "Tags" : [ {"Key" : "Name", "Value" : "nat-gateway" } ]
      }
    },
    "EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    
    "dynamoDBEndpoint" : {
      "Type" : "AWS::EC2::VPCEndpoint",
      "Properties" : {
        "PolicyDocument" : {
          "Version":"2012-10-17",
          "Statement":[{
            "Effect":"Allow",
            "Principal": "*",
            "Action":["dynamodb:*"],
            "Resource":["*"]
          }]
        },
        "RouteTableIds" : [ {"Ref" : "rtb4825e523"}],
        "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".dynamodb" ] ] },
        "VpcId" : {"Ref" : "vpc82d4e6ea"}
      }
    },
    
    
    
    "dopt840f29ec": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-central-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "aclcd9661a6": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "rtb4825e523": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    
    "customRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    
    "subnet0RTA": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : {"Ref" : "customRouteTable"},
        "SubnetId" : {"Ref" : "subnet3a639b77"}
      }
    },
    "subnetlb1aRTA": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : {"Ref" : "customRouteTable"},
        "SubnetId" : {"Ref" : "albsubnet1a"}
      }
    },
    "subnetlb1bRTA": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : {"Ref" : "customRouteTable"},
        "SubnetId" : {"Ref" : "albsubnet1b"}
      }
    },
    "subnet1RTA": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : {"Ref" : "rtb4825e523"},
        "SubnetId" : {"Ref" : "subnet1e76b075"}
      }
    },
    "subnet3RTA": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : {"Ref" : "rtb4825e523"},
        "SubnetId" : {"Ref" : "subnet327a7c48"}
      }
    },
    "elbHelloUserLB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "albsubnet1a"
          },
          {
            "Ref": "albsubnet1b"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "5",
          "Target": "HTTP:8080/HelloUserService/health",
          "Timeout": "3",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "instancei0c7ecf76957576990"
          },
          {
            "Ref": "instancei0cd9841b79b048483"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "sghellouserlblaunchsg"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "tomcat-server-lb"
          }
        ]
      }
    },
    
    "instancei0cd9841b79b048483": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile":{
          "Ref" : "HelloUserDynamoDbAccessInstanceProfile"
          },
        "ImageId": "ami-01478975d17efab70",
        "InstanceType": "t2.micro",
        "KeyName": {"Ref" : "KeyPairParameter"},
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello-user-tomcat-server-1"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet1e76b075"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.21.77",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sglaunchwizard1"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "instancei0c7ecf76957576990": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile":{
          "Ref" : "HelloUserDynamoDbAccessInstanceProfile"
          },
        "ImageId": "ami-01478975d17efab70",
        "InstanceType": "t2.micro",
        "KeyName": {"Ref" : "KeyPairParameter"},
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello-user-tomcat-server-2"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet327a7c48"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.38.30",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sglaunchwizard1"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "HelloUserDynamoDbAccessInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [
          {
            "Ref" : "HelloUserDynamoDbAccessRole"
          }
        ]
      }
    },
    "DynamoDbFullAccessPolicy" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "DynamoDbFullAccessPolicy",
        "PolicyDocument" : {
          "Statement": [
              {
                  "Action": [
                      "dynamodb:*",
                      "dax:*",
                      "application-autoscaling:DeleteScalingPolicy",
                      "application-autoscaling:DeregisterScalableTarget",
                      "application-autoscaling:DescribeScalableTargets",
                      "application-autoscaling:DescribeScalingActivities",
                      "application-autoscaling:DescribeScalingPolicies",
                      "application-autoscaling:PutScalingPolicy",
                      "application-autoscaling:RegisterScalableTarget",
                      "cloudwatch:DeleteAlarms",
                      "cloudwatch:DescribeAlarmHistory",
                      "cloudwatch:DescribeAlarms",
                      "cloudwatch:DescribeAlarmsForMetric",
                      "cloudwatch:GetMetricStatistics",
                      "cloudwatch:ListMetrics",
                      "cloudwatch:PutMetricAlarm",
                      "datapipeline:ActivatePipeline",
                      "datapipeline:CreatePipeline",
                      "datapipeline:DeletePipeline",
                      "datapipeline:DescribeObjects",
                      "datapipeline:DescribePipelines",
                      "datapipeline:GetPipelineDefinition",
                      "datapipeline:ListPipelines",
                      "datapipeline:PutPipelineDefinition",
                      "datapipeline:QueryObjects",
                      "ec2:DescribeVpcs",
                      "ec2:DescribeSubnets",
                      "ec2:DescribeSecurityGroups",
                      "iam:GetRole",
                      "iam:ListRoles",
                      "sns:CreateTopic",
                      "sns:DeleteTopic",
                      "sns:ListSubscriptions",
                      "sns:ListSubscriptionsByTopic",
                      "sns:ListTopics",
                      "sns:Subscribe",
                      "sns:Unsubscribe",
                      "sns:SetTopicAttributes",
                      "lambda:CreateFunction",
                      "lambda:ListFunctions",
                      "lambda:ListEventSourceMappings",
                      "lambda:CreateEventSourceMapping",
                      "lambda:DeleteEventSourceMapping",
                      "lambda:GetFunctionConfiguration",
                      "lambda:DeleteFunction"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
              },
              {
                  "Action": [
                      "iam:PassRole"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Condition": {
                      "StringLike": {
                          "iam:PassedToService": [
                              "application-autoscaling.amazonaws.com",
                              "dax.amazonaws.com"
                          ]
                      }
                  }
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "iam:CreateServiceLinkedRole"
                  ],
                  "Resource": "*",
                  "Condition": {
                      "StringEquals": {
                          "iam:AWSServiceName": [
                              "replication.dynamodb.amazonaws.com",
                              "dax.amazonaws.com",
                              "dynamodb.application-autoscaling.amazonaws.com"
                          ]
                      }
                  }
              }
          ]
        },
        "Roles" : [
          {
            "Ref" : "HelloUserDynamoDbAccessRole"
          }
        ]
      }
    },
    "HelloUserDynamoDbAccessRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement" : [
            {
              "Effect" : "Allow",
              "Principal" : {
                "Service" : ["ec2.amazonaws.com"]
              },
              "Action" : [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path" : "/"
      }
  },
    "tableHelloUser": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
	"TableName":"HelloUser",
        "AttributeDefinitions": [
          {
            "AttributeName": "first_name",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "first_name",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    },
    "topicMyCPUtopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "MyCPUtopic"
      }
    },
    "topicdynamodb": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "dynamodb"
      }
    },
    "sghellouserlblaunchsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "quick-create-1 created on Sunday, December 23, 2018 at 5:43:11 PM UTC+3",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "sglaunchwizard1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created 2018-12-22T22:19:58.292+03:00",
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        }
      }
    },
    "snspolicyMyCPUtopic": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicMyCPUtopic"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicMyCPUtopic"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869152300377"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicydynamodb": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicdynamodb"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicdynamodb"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869152300377"
                }
              }
            }
          ]
        }
      }
    },
    "alarmHelloUserReadCapacityUnitsLimitBasicAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "5",
        "MetricName": "ConsumedReadCapacityUnits",
        "Namespace": "AWS/DynamoDB",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "240.0",
        "AlarmActions": [
          "arn:aws:sns:eu-central-1:869152300377:dynamodb"
        ],
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": "HelloUser"
          }
        ]
      }
    },
    "alarmHelloUserWriteCapacityUnitsLimitBasicAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "5",
        "MetricName": "ConsumedWriteCapacityUnits",
        "Namespace": "AWS/DynamoDB",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "240.0",
        "AlarmActions": [
          "arn:aws:sns:eu-central-1:869152300377:dynamodb"
        ],
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": "HelloUser"
          }
        ]
      }
    },
    "alarmMyCPUAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "80.0",
        "AlarmActions": [
          "arn:aws:sns:eu-central-1:869152300377:MyCPUtopic"
        ],
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": "i-08682beaa1567cb12"
          }
        ]
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        },
        "SubnetId": {
          "Ref": "subnet327a7c48"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        },
        "SubnetId": {
          "Ref": "subnet1e76b075"
        }
      }
    },
    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        },
        "SubnetId": {
          "Ref": "subnet3a639b77"
        }
      }
    },
    "subnetacl7": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        },
        "SubnetId": {
          "Ref": "albsubnet1a"
        }
      }
    },
    "subnetacl8": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclcd9661a6"
        },
        "SubnetId": {
          "Ref": "albsubnet1b"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        },
        "InternetGatewayId": {
          "Ref": "igw298a5c41"
        }
      }
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "customRouteTable"
        },
        "GatewayId": {
          "Ref": "igw298a5c41"
        }
      },
      "DependsOn": "gw2"
    },
    
    
    "privateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "rtb4825e523" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT" }
      }
    },
    
    
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc82d4e6ea"
        },
        "DhcpOptionsId": {
          "Ref": "dopt840f29ec"
        }
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sghellouserlblaunchsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "SourceSecurityGroupId": {
          "Ref": "sghellouserlblaunchsg"
        },
        "SourceSecurityGroupOwnerId": "869152300377"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sghellouserlblaunchsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Outputs" : {
    "WebappLoadBalancerDns" : {
      "Description": "webapp load balancer DNS",
      "Value": { "Fn::GetAtt" : ["elbHelloUserLB", "DNSName"] }
    }
  },
  "Description": ""
}
